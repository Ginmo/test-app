{"version":3,"sources":["i18n.js","components/Navigation.js","Test.js","components/Login.js","actions/index.js","components/Register.js","App.js","reducers/navButtonsReducer.js","reducers/loginReducer.js","reducers/index.js","index.js"],"names":["resources","en","translation","fi","translationFI","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","keySeparator","interpolation","escapeValue","useStyles","makeStyles","menuItem","fontSize","borderRadius","backgroundColor","menuHeader","display","justifyContent","drawer","width","flexShrink","drawerPaper","Header","useState","leftMenuOpen","setLeftMenuOpen","rightMenuOpen","setRightMenuOpen","t","useTranslation","classes","navButtons","useSelector","state","navButtonsReducer","isLoggedin","loginReducer","console","log","useDispatch","useEffect","handleLeftMenuOpening","handleClose","e","target","id","changeLanguage","lng","AppBar","position","style","background","Toolbar","Grid","item","IconButton","disabled","onClick","visibility","md","container","justify","Button","size","event","currentTarget","Drawer","className","anchor","open","paper","List","ListItem","button","disableRipple","anchorEl","keepMounted","Boolean","onClose","MenuItem","green","margin","red","blue","maxWidth","editButton","color","App","testState","setTestState","axios","get","then","response","catch","error","Card","marginTop","xs","direction","alignItems","paddingTop","Avatar","Typography","variant","marginLeft","paddingRight","Tabs","centered","Tab","label","dispatch","type","Navigation","exact","path","Test","component","Register","Login","action","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f522402e.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport translationFI from './locales/translation_fi.json';\r\nimport translationEN from './locales/translation_en.json';\r\n\r\nconst resources = {\r\n    en: {\r\n        translation: translationEN\r\n    },\r\n    fi: {\r\n        translation: translationFI\r\n    }\r\n};\r\n\r\ni18n\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources,\r\n        fallbackLng: \"en\",\r\n\r\n        keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\nexport default i18n;","import React, { useState, useEffect } from 'react';\r\nimport { IconButton, Grid, makeStyles } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountBox from '@material-ui/icons/AccountBox';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Close from '@material-ui/icons/Close';\r\nimport DriveEta from '@material-ui/icons/DriveEta';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport i18n from '../i18n';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { hideNavButtons, showNavButtons, logIn } from '../actions';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles({\r\n    menuItem: {\r\n        fontSize: 20,\r\n        borderRadius: \"0%\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\"\r\n        }\r\n    },\r\n    menuHeader: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    }\r\n});\r\nconst Header = () => {\r\n    const [leftMenuOpen, setLeftMenuOpen] = useState(false);\r\n    const [rightMenuOpen, setRightMenuOpen] = useState(null);\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n    const navButtons = useSelector(state => state.navButtonsReducer);\r\n    const isLoggedin = useSelector(state => state.loginReducer);\r\n    //console.log(isLoggedin);\r\n    console.log(navButtons);\r\n    console.log(isLoggedin)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        //dispatch(hideNavButtons());\r\n        //dispatch(logIn());\r\n    }, []);\r\n\r\n\r\n\r\n    /*\r\n    let hideButtons = classes.hideButtons;\r\n    if (props.hideButtons !== undefined) {\r\n        hideButtons = props.hideButtons;\r\n    }\r\n    */\r\n\r\n    const handleLeftMenuOpening = () => {\r\n        console.log(\"left_menu\");\r\n        if (leftMenuOpen === true) {\r\n            setLeftMenuOpen(false);\r\n        } else {\r\n            setLeftMenuOpen(true);\r\n        }\r\n    }\r\n\r\n    const handleRightMenuOpening = (event) => {\r\n        console.log(\"right_menu\");\r\n        setRightMenuOpen(event.currentTarget);\r\n    }\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.target.id);\r\n        setRightMenuOpen(null);\r\n    };\r\n\r\n    const changeLanguage = (lng) => {\r\n        console.log(lng);\r\n        i18n.changeLanguage(lng);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" style={{ background: \"blue\" }}>\r\n                <Toolbar>\r\n                    <Grid item>\r\n                        <IconButton disabled={navButtons.disabled} onClick={handleLeftMenuOpening}>\r\n                            <MenuIcon visibility={navButtons.visibility} />\r\n                        </IconButton>\r\n                    </Grid>\r\n\r\n                    <Grid item md={1}>\r\n\r\n                    </Grid>\r\n                    <Grid container justify={\"center\"}>\r\n                        <div>\r\n                            <h1>{t('app_name')}</h1>\r\n\r\n                            <h2>{t('header')}</h2>\r\n                        </div>\r\n\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button size=\"small\" onClick={() => changeLanguage('fi')}>fi</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button size=\"small\" onClick={() => changeLanguage('en')}>en</Button>\r\n                    </Grid>\r\n                    <Grid item md={1}>\r\n\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <IconButton>\r\n                            <AccountBox onClick={handleRightMenuOpening} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                id=\"left-menu\"\r\n                className={classes.drawer}\r\n                anchor=\"left\"\r\n                open={leftMenuOpen}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.menuHeader}>\r\n                    <IconButton>\r\n                        <Close onClick={handleLeftMenuOpening} />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <List>\r\n                    <ListItem button>\r\n                        <IconButton className={classes.menuItem} disableRipple={true}>\r\n                            <DriveEta />\r\n                            {t('menu_own_cars')}\r\n                        </IconButton>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n\r\n            <Menu\r\n                id=\"right-menu\"\r\n                anchorEl={rightMenuOpen}\r\n                keepMounted\r\n                open={Boolean(rightMenuOpen)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem id=\"profile\" onClick={(e) => handleClose(e)}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n            </Menu>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default (Header);","import React, { useState } from 'react';\r\nimport { Grid, makeStyles, Paper, Typography, Avatar, Button, Card, AppBar, Tab, Tabs } from '@material-ui/core';\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles({\r\n  green: {\r\n    backgroundColor: \"green\",\r\n    margin: 10\r\n  },\r\n  red: {\r\n    backgroundColor: \"red\"\r\n  },\r\n  blue: {\r\n    backgroundColor: \"blue\"\r\n  },\r\n  paper: {\r\n    backgroundColor: \"lightblue\",\r\n    margin: \"auto\",\r\n    maxWidth: 1024\r\n  },\r\n  editButton: {\r\n    color: \"white\",\r\n    backgroundColor: \"#304269\",\r\n    '&:hover': {\r\n      backgroundColor: \"#F26101\"\r\n    }\r\n  },\r\n});\r\n\r\n/*\r\n            <Grid container direction=\"column\" alignItems=\"center\" style={{ marginTop: 50 }}>\r\n                <div className={classes.carViewGrid}>\r\n                    <Card>\r\n                        <div className={classes.carViewCard}>\r\n                            <Grid item md={1}>\r\n                                <Avatar className={classes.avatar}>{carData.brand.substring(0, 1)}</Avatar>\r\n                            </Grid>\r\n                            <Grid container justify=\"center\">\r\n                                <Grid item>\r\n                                    <Typography variant=\"body1\">{t('car_brand')}:</Typography>\r\n                                    <Typography variant=\"body1\">{t('car_model')}:</Typography>\r\n                                    <Typography variant=\"body1\">{t('car_yearmodel')}:</Typography>\r\n                                    <Typography variant=\"body1\">{t('car_powertype')}:</Typography>\r\n                                    <Typography variant=\"body1\">{t('car_enginesize')}:</Typography>\r\n                                    <Typography variant=\"body1\">{t('car_license')}:</Typography>\r\n                                </Grid>\r\n                                <Grid item style={{ marginLeft: 10 }}>\r\n                                    <Typography variant=\"body1\">{carData.brand}</Typography>\r\n                                    <Typography variant=\"body1\">{carData.model}</Typography>\r\n                                    <Typography variant=\"body1\">{carData.yearModel}</Typography>\r\n                                    <Typography variant=\"body1\">{carData.powerType}</Typography>\r\n                                    <Typography variant=\"body1\">{carData.engineSize}</Typography>\r\n                                    <Typography variant=\"body1\">{carData.licenseNumber}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item md={1} style={{ marginRight: 20 }}>\r\n                                <Button className={classes.editButton}>\r\n                                    {t('button_edit')}\r\n                                </Button>\r\n                            </Grid>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div className={classes.carViewGrid}>\r\n                    <Card>\r\n\r\n                        <AppBar position=\"static\" color=\"default\">\r\n                            <Tabs value={tabIndex} onChange={handleTabIndex}\r\n                                className={classes.tabView}\r\n                                classes={{ indicator: classes.indicatorColor }}\r\n                            >\r\n                                <Tab label={t('button_service_history')} className={tabIndex === 0 ? classes.tabActive : null} />\r\n                                <Tab label={t('button_add_service')} className={tabIndex === 1 ? classes.tabActive : null} />\r\n                                <Tab label={t('button_notes')} className={tabIndex === 2 ? classes.tabActive : null} />\r\n                            </Tabs>\r\n                        </AppBar>\r\n\r\n                        <CarTabs />\r\n                    </Card>\r\n                </div>\r\n            </Grid>\r\n*/\r\n\r\n/*\r\n                <Grid container justify=\"center\">\r\n                    <div className={classes.loginGrid}>\r\n                        <TextField\r\n                            onKeyDown={pressKey}\r\n                            id=\"email\"\r\n                            label={t('email')}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            inputRef={emailInput}\r\n                        />\r\n                        <TextField\r\n                            onKeyDown={pressKey}\r\n                            id=\"password\"\r\n                            label={t('password')}\r\n                            type=\"password\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            inputRef={passwordInput}\r\n                        />\r\n                        <Typography className={classes.infoText} variant=\"body1\">\r\n                            {loginText}\r\n                        </Typography>\r\n                        <Button\r\n                            className={classes.defaultButton}\r\n                            onClick={handleLogin}\r\n                            variant=\"contained\"\r\n                            style={{ marginTop: 50 }}>\r\n                            {t('login')}\r\n                        </Button>\r\n                        <Link className={classes.defaultLink} href=\"/forgotpassword\" >{t('forgot_password')}</Link>\r\n                        <Link className={classes.defaultLink} href=\"/register\" >{t('register_here')}</Link>\r\n                    </div>\r\n                </Grid>\r\n*/\r\n\r\n/*\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <div className={classes.formGrid}>\r\n          <form onSubmit={handleSubmit(onSubmit, onError)}>\r\n            <Grid container item xs={12} direction=\"row\">\r\n              <Typography variant=\"h5\">\r\n                {t('car_addcar')}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid container item xs={12} direction=\"row\">\r\n              <TextField\r\n                name=\"brand\"\r\n                style={{ margin: 8 }}\r\n                placeholder={t('car_brand')}\r\n                inputRef={register({\r\n                  required: t('car_brand') + \" \" + t('error_required'),\r\n                  minLength: { value: 2, message: t('car_brand') + \" \" + t('error_shorter') + \" 2 \" + t('error_characters') }\r\n                })}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n\r\n              <TextField\r\n                name=\"model\"\r\n                style={{ margin: 8 }}\r\n                placeholder={t('car_model')}\r\n                inputRef={register({\r\n                  required: t('car_model') + \" \" + t('error_required'),\r\n                  minLength: { value: 2, message: t('car_model') + \" \" + t('error_shorter') + \" 2 \" + t('error_characters') }\r\n                })}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n\r\n              <TextField\r\n                name=\"yearModel\"\r\n                style={{ margin: 8 }}\r\n                placeholder={t('car_yearmodel')}\r\n                inputRef={register({\r\n                  required: t('car_yearmodel') + \" \" + t('error_required'),\r\n                  minLength: { value: 4, message: t('car_yearmodel') + \" \" + t('error_shorter') + \" 4 \" + t('error_characters') },\r\n                  maxLength: { value: 4, message: t('car_yearmodel') + \" \" + t('error_longer') + \" 4 \" + t('error_characters') },\r\n                  min: { value: \"1900\", message: t('car_yearmodel') + \" \" + t('error_number') + \" 1900 - 2100 \" },\r\n                  max: { value: \"2100\", message: t('car_yearmodel') + \" \" + t('error_number') + \" 1900 - 2100 \" },\r\n                  pattern: {\r\n                    value: /[0-9]/,\r\n                    message: t('car_yearmodel') + t('error_inputs') + \" 0-9\"\r\n                  }\r\n                })}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container item xs={12} direction=\"row\">\r\n\r\n              <TextField\r\n                name=\"powerType\"\r\n                style={{ margin: 8 }}\r\n                placeholder={t('car_powertype')}\r\n                inputRef={register({\r\n                  required: t('car_powertype') + \" \" + t('error_required'),\r\n                  minLength: { value: 2, message: t('car_powertype') + \" \" + t('error_shorter') + \" 2 \" + t('error_characters') }\r\n                })}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n\r\n              <TextField\r\n                name=\"engineSize\"\r\n                style={{ margin: 8 }}\r\n                placeholder={t('car_enginesize')}\r\n                inputRef={register({\r\n                  required: t('car_enginesize') + \" \" + t('error_required'),\r\n                  minLength: { value: 2, message: t('car_enginesize') + \" \" + t('error_shorter') + \" 2 \" + t('error_characters') }\r\n                })}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n\r\n              <TextField\r\n                name=\"licenseNumber\"\r\n                style={{ margin: 8 }}\r\n                placeholder={t('car_license')}\r\n                inputRef={register({\r\n                  required: t('car_license') + \" \" + t('error_required'),\r\n                  minLength: { value: 2, message: t('car_license') + \" \" + t('error_shorter') + \" 2 \" + t('error_characters') }\r\n                })}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item >\r\n              <Typography className={classes.infoText} variant=\"body1\">\r\n                {errorText}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item >\r\n              <Button\r\n                className={classes.defaultButton}\r\n                style={{ marginTop: 25 }}\r\n                type=\"submit\">\r\n                {t('button_submit')}\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n*/\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const [testState, setTestState] = useState(\"default\");\r\n\r\n  axios.get('api/test', {\r\n\r\n  }).then((response) => {\r\n    console.log(response);\r\n    setTestState(\"response ok\");\r\n  }).catch((error) => {\r\n    console.log(error);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.paper} style={{ marginTop: 50 }}>\r\n        <Grid container >\r\n          <Grid container xs={4} direction=\"column\" alignItems=\"flex-end\" style={{ paddingTop: 25 }} >\r\n            <Avatar>F</Avatar>\r\n          </Grid>\r\n          <Grid container xs={4} justify=\"center\" alignItems=\"center\" style={{ paddingTop: 25 }} >\r\n            <Grid item>\r\n              <Typography variant=\"body1\">TestName:</Typography>\r\n              <Typography variant=\"body1\">TestName:</Typography>\r\n              <Typography variant=\"body1\">TestName:</Typography>\r\n              <Typography variant=\"body1\">TestName:</Typography>\r\n              <Typography variant=\"body1\">TestName:</Typography>\r\n              <Typography variant=\"body1\">TestName:</Typography>\r\n              <Typography variant=\"body1\">TestName:</Typography>\r\n              <Typography variant=\"body1\">TestName:</Typography>\r\n              <Typography variant=\"body1\">TestName:</Typography>\r\n              <Typography variant=\"body1\">TestName:</Typography>\r\n              <Typography variant=\"body1\">TestName:</Typography>\r\n              <Typography variant=\"body1\">TestName:</Typography>\r\n            </Grid>\r\n            <Grid item style={{ marginLeft: 10 }}>\r\n              <Typography variant=\"body1\">{testState}</Typography>\r\n              <Typography variant=\"body1\">TestName</Typography>\r\n              <Typography variant=\"body1\">TestName</Typography>\r\n              <Typography variant=\"body1\">TestName</Typography>\r\n              <Typography variant=\"body1\">TestName</Typography>\r\n              <Typography variant=\"body1\">TestName</Typography>\r\n              <Typography variant=\"body1\">TestName</Typography>\r\n              <Typography variant=\"body1\">TestName</Typography>\r\n              <Typography variant=\"body1\">TestName</Typography>\r\n              <Typography variant=\"body1\">TestName</Typography>\r\n              <Typography variant=\"body1\">TestName</Typography>\r\n              <Typography variant=\"body1\">TestName</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container xs={4} direction=\"column\" alignItems=\"flex-end\" style={{ paddingTop: 25, paddingRight: 10 }} >\r\n            <Button className={classes.editButton}>\r\n              test\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n\r\n      <Card className={classes.paper}>\r\n\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs centered\r\n          >\r\n            <Tab label={\"panel1\"} />\r\n            <Tab label={\"panel2\"} />\r\n            <Tab label={\"panel3\"} />\r\n          </Tabs>\r\n        </AppBar>\r\n\r\n        <Typography variant=\"body1\">content---</Typography>\r\n      </Card>\r\n\r\n    </div >\r\n\r\n  )\r\n};\r\n\r\nexport default (App);","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { hideNavButtons } from '../actions';\r\n\r\nconst App = () => {\r\n    const navButtons = useSelector(state => state.navButtonsReducer);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(hideNavButtons());\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            LOGIN PAGE\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default (App);","export const hideNavButtons = () => {\r\n    return {\r\n        type: \"HIDE\"\r\n    }\r\n}\r\n\r\nexport const showNavButtons = () => {\r\n    return {\r\n        type: \"SHOW\"\r\n    }\r\n}\r\n\r\nexport const logIn = () => {\r\n    return {\r\n        type: \"LOGIN\"\r\n    }\r\n}","import React from 'react';\r\n\r\nconst App = () => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            REGISTER PAGE\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default (App);","import React, { useEffect } from 'react';\r\nimport Navigation from './components/Navigation';\r\nimport Test from './Test';\r\nimport Test2 from './Test2';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { hideNavButtons, showNavButtons, logIn } from './actions';\r\n\r\nconst App = () => {\r\n\r\n  const isLoggedin = useSelector(state => state.loginReducer);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    //dispatch(hideNavButtons());\r\n    //dispatch(logIn());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navigation />\r\n\r\n        <Route exact path=\"/\" exact component={Test} />\r\n\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/login\" exact component={Login} />\r\n      </Router>\r\n    </div >\r\n  )\r\n};\r\n\r\nexport default (App);\r\n","const navButtonsReducer = (state = { disabled: false, visibility: \"visible\" }, action) => {\r\n    switch (action.type) {\r\n        case \"HIDE\":\r\n            return { disabled: true, visibility: \"hidden\" }\r\n        case \"SHOW\":\r\n            return { disabled: false, visibility: \"visible\" }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default navButtonsReducer;","const loginReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default loginReducer;","import navButtonsReducer from './navButtonsReducer';\r\nimport loginReducer from './loginReducer';\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    navButtonsReducer,\r\n    loginReducer\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport allReducers from './reducers';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'))\r\n"],"sourceRoot":""}